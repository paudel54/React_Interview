Creating LIST 
1//React always asks for id on creating a list
this is because react needs to identify each rendered item, 
when item need to be added, changed or removed. 

Setting index as a unique Identity is not at all a preferred way, because the moment the item
is added or value is changed, the index may refer to a different entity.
2//React prefers id or key ot be of String. 
 
3// Should you use the index of map() method as key attribute?
No=> key: must have stable identity. Its better to assign stable id, eg that can be from database,  

4// what would be teh defalut value of attrribute
=>TRUE <DemoComponent value/>


5//Use of Spread Operator:
passing attribute with the Spread Operator is a fantastic short way when you are willing to pass object to props. 

6.//React Fragmants:
allows up to wrap children without adding extra notes to the DOM.

7.//Event Handling with inputs, checkbox,text inputs, forms!!
 {/* on passing parameter on events like onCLick={()=>functionWithParameters()} or args we need to have a fuction with return so it prevents on load behaviour.  */}
 //Synthetic Events (e)
 e.target means we are going to get the reference of the element which raised the event. 
 What is Synthetic Events.||> A syntheticEvent is a wrapper around the native browser event object and that is passed to every function automatically
 //ITS automatically Received. Reference of event received as each
 8. Write a code to get content of divison. 
 Create a div with onClick handler and console.log('Content of div', e.target.innerHTML)

9. Input Events!
    event handler: onChange={getChange} e.target.value
    How do you update text input on react?
    => SyntheticEvent (e.target.value) has reference to that element from which we can update the state and Render to InterFace. 

9.Preventing Default behaviour on form Submit. 
    How will you prevent the default behaviour of an element?
    can you use return false ? no not in react
    we use e.preventDefault() explicetly. 

10.! When you try to update Object Literal, you have to make sure that the previous/existing value is there & then you update the new value
How will you update the individual value of state inside an object?
// updating individual value of state inside an object by the use of Spread operator

11. Can you directly render object?
object are not valid react child we need to convert into String with JSON.Stringify

12.Improvising handlers, single handlers for all inputs or state
introduction to square [] to haold variable
let test = "ename";
const obj = {
    [test]: 'Name'
}
 
 Here Key of an object hold on Variable Name
 //implementaion of dynamic keys and single change handlers. 

 13. Why is updating state with "functional update" syntax better?
   const handleChange = (e) => {
    //  better apporcah with use of previous state
    // setPersonInfo({ ...personInfo, [e.target.name]: e.target.value })
    setPersonInfo((prevState) => {
      return { ...prevState, [e.target.name]: e.target.value }
    });
  }

!!=> React doesnot update the state immediately as it has its own method or schedule to update the state
INcase there are many updates of state happening at same time, it may refers to incorrect copy of state
functional update makes sure we have latest copy of the state. 

14.// Checkbox or Radio -Input Feild
Dropdown button =>value Property
Textboxes => value Property
Checkbox/radioButon =>Checked Property

15.// What is  Conditional Rendering. => Showing Specific components depending on Specific Condition. 
Depending upon user Interface Changes: realworld exmp: dashboard switch ADMIN vs USER. 
using if..else swithc..case.. ternary Operator ( condition ? true: false) logical &&

16. Explain the JSX element variable syntax and concept. 

const prodItems = (items.map((item)=>{
  return (
    <li>{item.pName}</li>
  )
}))

17.  Logical && 
{condition if true && renders HTML elements}

18. Multi-Page Application
    page reloading is not good idea for user: 
    page reloading and refreshing not good approach
    //difference between MPA(Multipage Application vs Single Page Application)

    MPAs reloads the HTML pages 
    HTML pages with css and other things are rendered on the server & then they are delivered
    They are reloaded/rerendered at the client Side
    The refresh of the page is visible to the end user. 

    //Single-Page Application.ðŸ”¥
      SPAs loads the page once and then only it transmits the data between client and server
      This transmission of data basically doesnot refresh the entire page-the main container remains as it is & the data/inner pages appears as 
      if they chage but they are genereated at client side only. !

    19. How do you acheive Single Page Application
      use of link instead of anchor. 
      firstly: install react-router-dom, 2ndly wrap the entire app on index.js with BrowserROuter and 3rd use Route package and Link to attain state. 

    20. Looking at code refactor dashboard/Home page comes on openeing the  webpage
      // wrap route1,route2, ..routen  with switch and put path = / at the end. 

      //Explain the "exact" attribute's purpose used with <Route> Component . 
      !! <Route path = "/"> Matches the beginning of the String not whole String. all other paths like /address / porducts etc had matching inital /
      So, / was rendering to every component to avoid this situation and to have exact path matching we swithc on the arrtibute "exact ".

      //how is it different to use <Route> with and without <Switch>?
       <route> placed in <Switch> will have different execution, if route is executed, then rest of the routes are not rendered and are skipped. 
       This will always match the URL for all the items selected. 
  
  21. what is multi-Page-Application ?  on every url change page reloading because once product/1 is fetched for product/2 everythingtom client and server has to be done from scratch
      //this will reload the page which is not efficent so Single-Page_Application got introduced. 
      //single page appliaction SPA will only renders onto client side. the renderig or refetching the html is not required. 

  22.. Route Paramaters. 

      //How can you link dynamic Routes? || How do you link Parameters witha Route?
       To add dynamic Parameters with the Route URL, you just have to use => 
       <Route path = "domain.com/route/:paramname" </Route>    it can be extreacted by useParams() hook . the last /item
       //  /route/:<param> is given at runtime which can be anything. 
  23. useRouteMatch() hook return path, url isExact and params as object

    path: vs URL 
    path
    /tutorials/:title then the path will show => /tutorials/:title   || path is used for building out nested Routes 
    URl
    /tutorials/regex then the path will show the value of title      || URL is used for building out <Links>

24. WHat is nested Routes?
    Routes are defined at component level and there can be dynamic urls configured with nested Routes. 
    
    //useRouteMatch() hook - We have used to get the match object or match data
    Though it attempts to match the current URL in the same way as that a <Route> would as per the official site of react Router. 
    we can use it 2 ways:
    1. const match = useRouteMatch(); || in this case it returns the match object and no parameter is given 
    2. Object as parameter is passed. 
        const match = useRouteMatch({
          path:'/tutorials/:title',
          strict:true
        })

    //what is "match" object in react router useRaouterMatch()? 
     The "match" object contains information about how a <Route Path> is matched
     The match object has various object properties like params, isExact, path and url
